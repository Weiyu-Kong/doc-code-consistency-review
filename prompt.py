ALIGN_PROMPT_TEMPLATE = """你是一位精通航天领域软件系统和C/C++编程的资深专家。
# 任务
给定一段Markdown格式的需求，以及一个带行号的代码文件的内容，请你帮我找出与该需求最相关的代码段。严格按照以下JSON格式返回结果：
```json
{{
  "related_code": [[start1, end1], [start2, end2], ...],
}}
```
# 提示
1.直接返回结果，不要输出其他思考和说明内容。例如，如果代码中的第5行到第10行，和第20到30行与需求相关，则返回：
```json
{{
  "related_code": [[5, 10], [20, 30], ...],
}}
```
如果没有相关的代码，则返回：
```json
{{
  "related_code": []
}}
```
2.相关指的是代码实现了需求中描述的功能或逻辑。如果需求中有表格或公式，请查找与之相关的代码行号。如果需求中有多个相关代码段，请全部返回，不要遗漏。

# 输入
## 需求如下：
{req_content}
\n## 代码如下：
{code_content}
"""


REVIEW_PROMPT_TEMPLATE = """
# 任务说明
作为航天软件质量审查专家，请执行以下任务：
1. 详细分析需求与代码实现的一致性
2. 输出完整审查报告（包含分析过程和问题单）

# 需求内容
{requirement}

# 相关代码块
{related_code}

# 输出要求
请严格按以下两部分格式输出：

## 第一部分：审查分析过程
- 详细分析每个代码文件与需求的对应关系
- 逐段审查代码实现是否准确满足需求
- 识别潜在不一致点和技术风险
- 包含具体代码位置引用
- 使用以下分隔符标记结束：===== 审查分析过程结束 =====

## 第二部分：问题单
- 按照以下格式列出所有不一致问题：
在[文件名]的[函数名/行号]处，程序实现是[具体代码实现]，而需求是[需求描述]，实现与需求不一致，原因是[技术分析]。
- 如果有多个不一致点，请依次列出
- 使用以下分隔符标记结束：===== 问题单结束 =====

# 审查标准
1. 功能一致性：代码是否实现需求描述的功能
2. 算法一致性：实现算法是否与需求描述一致
3. 参数一致性：常量/变量值是否符合需求
4. 安全要求：是否符合航天软件安全标准
5. 实时性：是否满足实时性约束
"""


GENERATE_PROMPT_TEMPLATE = """
# 任务说明
你是一位精通航天领域软件系统和C/C++编程的资深专家。请你根据以下代码，生成描述该代码功能的需求片段，要求如下：
1. 生成的需求片段应简洁明了，能够清晰描述代码的功能和目的
2. 需求片段应包含必要的细节，但不需要过于冗长

# 相关代码
{related_code}

# 输出要求
直接输出生成的需求片段，不要输出其他内容。
"""